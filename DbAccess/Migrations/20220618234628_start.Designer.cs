// <auto-generated />
using System;
using DbAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DbAccess.Migrations
{
    [DbContext(typeof(DataStore))]
    [Migration("20220618234628_start")]
    partial class start
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("product_information")
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DbAccess.Entities.BarCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasComment("Идентификатор штрих-кода продукта");

                    b.Property<string>("BarCodeNumber")
                        .IsRequired()
                        .HasColumnType("varchar(13)")
                        .HasColumnName("barcode_number")
                        .HasComment("номер штрих-кода продукта");

                    b.HasKey("Id");

                    b.ToTable("barcode", "product_information");

                    b.HasComment("Штрих-код продукта");
                });

            modelBuilder.Entity("DbAccess.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasComment("Идентификатор продукта");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("product_name")
                        .HasComment("Название продукта");

                    b.Property<Guid>("barcode_id")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("barcode_id");

                    b.ToTable("product", "product_information");

                    b.HasComment("Продукт");
                });

            modelBuilder.Entity("DbAccess.Entities.ProductComposition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasComment("Идентификатор компонента пищевого продукта");

                    b.Property<string>("HazardDescription")
                        .IsRequired()
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("hazard_description")
                        .HasComment("Описание вредности компонента пищевого продукта");

                    b.Property<string>("ProductCompositionName")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("product_composition_name")
                        .HasComment("Название компонента пищевого продукта");

                    b.Property<Guid>("product_id")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("product_id");

                    b.ToTable("product_composition", "product_information");

                    b.HasComment("Состав продукта с его вредностью/безопасностью");
                });

            modelBuilder.Entity("DbAccess.Entities.Product", b =>
                {
                    b.HasOne("DbAccess.Entities.BarCode", "BarCode")
                        .WithMany()
                        .HasForeignKey("barcode_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BarCode");
                });

            modelBuilder.Entity("DbAccess.Entities.ProductComposition", b =>
                {
                    b.HasOne("DbAccess.Entities.Product", "Product")
                        .WithMany("ProductCompositions")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DbAccess.Entities.Product", b =>
                {
                    b.Navigation("ProductCompositions");
                });
#pragma warning restore 612, 618
        }
    }
}
